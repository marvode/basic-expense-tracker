{"version":3,"sources":["components/Header.jsx","context/AppReducer.js","AppStorage.js","context/GlobalState.js","components/IncomeExpenses.jsx","components/Balance.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","getAllTransactions","JSON","parse","localStorage","getItem","setTransactions","items","setItem","stringify","initialState","initializeStorage","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","clearTransactions","addTransactions","IncomeExpenses","amounts","useContext","map","amount","income","reduce","acc","toFixed","expense","Balance","total","sign","Math","abs","Transaction","text","isPositive","onClick","deleteItemFromTransactions","TransactionList","length","removeItem","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseFloat","item","addItemToTransactions","placeholder","onChange","target","required","App","style","height","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d750eac.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n\treturn <h1 className=\"text-3xl my-4\">Expense Tracker</h1>;\n};\n\nexport default Header;\n","export default (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"DELETE_TRANSACTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactions: state.transactions.filter(\n\t\t\t\t\t(transaction) => transaction.id !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase \"ADD_TRANSACTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactions: [...state.transactions, action.payload],\n\t\t\t};\n\t\tcase \"CLEAR_TRANSACTIONS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactions: [],\n\t\t\t};\n\t\tcase \"ADD_TRANSACTIONS\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactions: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const addItemToTransactions = (item) => {\n\tconst transactions = getAllTransactions();\n\treturn transactions\n\t\t? setTransactions([...transactions, item])\n\t\t: setTransactions([item]);\n};\n\nexport const clearAllTransactions = () => {\n\tlocalStorage.removeItem(\"transactions\");\n};\n\nexport const deleteItemFromTransactions = (id) => {\n\tconst transactions = getAllTransactions().filter(\n\t\t(transaction) => transaction.id !== id\n\t);\n\treturn setTransactions(transactions);\n};\n\nconst getAllTransactions = () => {\n\treturn JSON.parse(localStorage.getItem(\"transactions\"));\n};\n\nconst setTransactions = (items) => {\n\tlocalStorage.setItem(\"transactions\", JSON.stringify(items));\n};\n\nexport const initializeStorage = () => {\n\tconst transactions = getAllTransactions();\n\n\tif (transactions) return transactions;\n\telse {\n\t\tsetTransactions([]);\n\t\treturn [];\n\t}\n};\n","import React, { useReducer, createContext } from \"react\";\n\nimport AppReducer from \"./AppReducer\";\nimport { initializeStorage } from \"../AppStorage\";\n\nconst initialState = {\n\ttransactions: initializeStorage(),\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\n\n\tconst deleteTransaction = (id) => {\n\t\tdispatch({\n\t\t\ttype: \"DELETE_TRANSACTION\",\n\t\t\tpayload: id,\n\t\t});\n\t};\n\n\tconst addTransaction = (transaction) => {\n\t\tdispatch({\n\t\t\ttype: \"ADD_TRANSACTION\",\n\t\t\tpayload: transaction,\n\t\t});\n\t};\n\n\tconst clearTransactions = () => {\n\t\tdispatch({\n\t\t\ttype: \"CLEAR_TRANSACTIONS\",\n\t\t});\n\t};\n\n\tconst addTransactions = (transactions) => {\n\t\tdispatch({\n\t\t\ttype: \"ADD_TRANSACTIONS\",\n\t\t\tpayload: transactions,\n\t\t});\n\t};\n\n\treturn (\n\t\t<GlobalContext.Provider\n\t\t\tvalue={{\n\t\t\t\ttransactions: state.transactions,\n\t\t\t\tdeleteTransaction,\n\t\t\t\taddTransaction,\n\t\t\t\tclearTransactions,\n\t\t\t\taddTransactions,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</GlobalContext.Provider>\n\t);\n};\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState.js\";\n\nconst IncomeExpenses = () => {\n\tconst { transactions } = useContext(GlobalContext);\n\tconst amounts = transactions.map((transaction) => transaction.amount);\n\n\tconst income = amounts\n\t\t.filter((amount) => amount > 0)\n\t\t.reduce((acc, amount) => acc + amount, 0)\n\t\t.toFixed(2);\n\n\tconst expense =\n\t\tamounts\n\t\t\t.filter((amount) => amount < 0)\n\t\t\t.reduce((acc, amount) => acc + amount, 0)\n\t\t\t.toFixed(2) * -1;\n\n\treturn (\n\t\t<div className=\"grid grid-cols-2 py-5 mb-8 bg-white rounded shadow\">\n\t\t\t<div className=\"mx-auto tracking-wide\">\n\t\t\t\t<h4 className=\"uppercase\">Income</h4>\n\t\t\t\t<p className=\"text-green-500 text-center\">${income}</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto tracking-wide\">\n\t\t\t\t<h4 className=\"uppercase\">Expense</h4>\n\t\t\t\t<p className=\"text-red-500 text-center\">${expense}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState.js\";\n\nconst Balance = () => {\n\tconst { transactions } = useContext(GlobalContext);\n\tconst amounts = transactions.map((transaction) => transaction.amount);\n\tconst total = amounts.reduce((acc, amount) => acc + amount, 0).toFixed(2);\n\tconst sign = total >= 0 ? \"\" : \"-\";\n\treturn (\n\t\t<div className=\"mb-5\">\n\t\t\t<h3 className=\"uppercase\">Your Balance</h3>\n\t\t\t<h2 className=\"text-5xl leading-none tracking-wide\">{`${sign}$ ${Math.abs(\n\t\t\t\ttotal\n\t\t\t)}`}</h2>\n\t\t</div>\n\t);\n};\n\nexport default Balance;\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState.js\";\nimport { deleteItemFromTransactions } from \"../AppStorage.js\";\n\nconst Transaction = ({ id, text, amount }) => {\n\tconst { deleteTransaction } = useContext(GlobalContext);\n\n\tconst sign = amount > 0 ? \"+\" : \"-\";\n\tconst isPositive = amount >= 0 ? \"border-green-600\" : \"border-red-600\";\n\n\treturn (\n\t\t<li className=\"mb-3 transaction-item transform duration-500 hover:-translate-y-1\">\n\t\t\t<div\n\t\t\t\tclassName={`bg-white px-3 py-3 border-r-8 rounded shadow  hover:shadow-lg ${isPositive}`}\n\t\t\t>\n\t\t\t\t<p className=\"flex justify-between\">\n\t\t\t\t\t<span className=\"capitalize\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"px-2 mr-2 del_button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tdeleteTransaction(id);\n\t\t\t\t\t\t\t\tdeleteItemFromTransactions(id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t&times;\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{text}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>{`${sign} $ ${Math.abs(amount)}`}</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default Transaction;\n","import React, { useContext } from \"react\";\n\nimport Transaction from \"./Transaction.jsx\";\n\nimport { GlobalContext } from \"../context/GlobalState.js\";\nimport { clearAllTransactions } from \"../AppStorage.js\";\n\nconst TransactionList = () => {\n\tconst { transactions, clearTransactions } = useContext(GlobalContext);\n\n\treturn (\n\t\t<div className=\"pb-8\">\n\t\t\t<div className=\"flex justify-between pb-2 mb-3 border-b border-gray-400\">\n\t\t\t\t<h3 className=\"-pb-2\">History</h3>\n\t\t\t\t{transactions.length ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\" px-2 py-1 bg-red-600 rounded\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tclearTransactions();\n\t\t\t\t\t\t\tclearAllTransactions();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tClear\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{transactions.map((transaction) => (\n\t\t\t\t\t<Transaction key={transaction.id} {...transaction} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default TransactionList;\n","import React, { useState, useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState.js\";\nimport { addItemToTransactions } from \"../AppStorage.js\";\n\nconst AddTransaction = () => {\n\tconst [text, setText] = useState(\"\");\n\tconst [amount, setAmount] = useState(\"\");\n\n\tconst { addTransaction } = useContext(GlobalContext);\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst newTransaction = {\n\t\t\tid: Math.floor(Math.random() * 1000000000),\n\t\t\ttext,\n\t\t\tamount: parseFloat(amount),\n\t\t};\n\n\t\taddTransaction(newTransaction);\n\n\t\taddItemToTransactions(newTransaction);\n\n\t\tsetText(\"\");\n\t\tsetAmount(\"\");\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h3 className=\"pb-2 mb-3 border-b border-gray-400\">\n\t\t\t\tAdd new transaction\n\t\t\t</h3>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"pb-2\">\n\t\t\t\t\t<label className=\"mb-2\">Text</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"w-full px-3 py-2 rounded focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Enter text\"\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pb-4\">\n\t\t\t\t\t<label className=\"mb-2\">\n\t\t\t\t\t\tAmount <br />\n\t\t\t\t\t\t(negative - expense, positive - income)\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"w-full px-3 py-2 rounded focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Enter amount\"\n\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\n\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"bg-teal-600 w-full py-3 text-center text-gray-200 rounded\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tAdd transaction\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default AddTransaction;\n","import React from \"react\";\n\nimport \"./css/tailwind.css\";\n\nimport Header from \"./components/Header\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport Balance from \"./components/Balance\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n\treturn (\n\t\t<GlobalProvider>\n\t\t\t<div\n\t\t\t\tclassName=\"flex content-center text-lg text-gray-800\"\n\t\t\t\tstyle={{ height: \"100vh\" }}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"max-w-md mx-auto my-auto pb-5 px-5 shadow-md rounded\"\n\t\t\t\t\tstyle={{ backgroundColor: \"#f7f7f7\" }}\n\t\t\t\t>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Balance />\n\t\t\t\t\t<IncomeExpenses />\n\t\t\t\t\t<TransactionList />\n\t\t\t\t\t<AddTransaction />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</GlobalProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}